[package]
name = "tardigrade-grpc"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
keywords.workspace = true
categories.workspace = true
repository.workspace = true
readme = "README.md"
description = "Server gRPC bindings for Tardigrade runtime"

[dependencies]
async-stream.workspace = true
chrono.workspace = true
futures.workspace = true
prost.workspace = true
prost-types.workspace = true
tokio = { workspace = true, features = ["rt"], optional = true }
tonic = { workspace = true, features = ["codegen", "prost"] }
tracing = { workspace = true, features = ["attributes"] }

tardigrade = { version = "0.1.0", path = "../lib" }
tardigrade-rt = { version = "0.1.0", path = "../rt", features = ["tokio"], optional = true }
tardigrade-worker = { version = "0.1.0", path = "../worker" }

[dev-dependencies]
anyhow.workspace = true
assert_matches.workspace = true
tokio = { workspace = true, features = ["rt", "macros"] }
tonic = { workspace = true, default-features = true }
version-sync.workspace = true

tardigrade-rt = { version = "0.1.0", path = "../rt", features = ["test"] }

[build-dependencies]
tonic-build.workspace = true

[features]
default = []
# Enables gRPC service implementations
server = ["tardigrade-rt", "tokio"]
# Enables gRPC client code.
client = ["tonic/transport"]
